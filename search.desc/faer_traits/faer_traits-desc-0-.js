searchState.loadedDescShard("faer_traits", 0, "Equally-sized index type with a fixed size (no <code>usize</code>).\nMaximum representable value.\nEqually-sized signed index type.\nTrait for signed integers corresponding to the ones …\nConvert a reference to a slice of <code>Self</code> to fixed width …\nConvert a mutable reference to a slice of <code>Self</code> to fixed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a signed value to an unsigned one.\nImaginary portion of the complex number\nImaginary portion of the complex number\nImaginary portion of the complex number\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReal portion of the complex number\nReal portion of the complex number\nReal portion of the complex number\nSum nonnegative values while checking for overflow.\nSum values while checking for overflow.\nSign extend <code>self</code>.\nConvert an unsigned value to a signed one.\nTruncate <code>value</code> to type <code>Self</code>.\nTruncate <code>value</code> to type <code>Self</code>.\nZero extend <code>self</code>.\nZero extend <code>self</code>.")