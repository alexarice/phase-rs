(function() {
    var type_impls = Object.fromEntries([["unionfind",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-UnionFind%3CT,+V,+M,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#13\">Source</a><a href=\"#impl-Clone-for-UnionFind%3CT,+V,+M,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#13\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","unionfind::VecUnionFind","unionfind::VecUnionFindByRank","unionfind::HashUnionFind","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFind","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-UnionFind%3CT,+V,+M,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#13\">Source</a><a href=\"#impl-Debug-for-UnionFind%3CT,+V,+M,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#13\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","unionfind::VecUnionFind","unionfind::VecUnionFindByRank","unionfind::HashUnionFind","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFind","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFind%3CT,+V,+M,+ByRank%3CR,+T%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#170-193\">Source</a><a href=\"#impl-UnionFind%3CT,+V,+M,+ByRank%3CR,+T%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, V, M, R&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, <a class=\"struct\" href=\"unionfind/extra/struct.ByRank.html\" title=\"struct unionfind::extra::ByRank\">ByRank</a>&lt;R, T&gt;&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableIdentityMapping.html\" title=\"trait unionfind::mapping::GrowableIdentityMapping\">GrowableIdentityMapping</a>&lt;T&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    R: <a class=\"trait\" href=\"unionfind/mapping/trait.RankMapping.html\" title=\"trait unionfind::mapping::RankMapping\">RankMapping</a>&lt;T&gt;,\n    <a class=\"struct\" href=\"unionfind/extra/struct.ByRank.html\" title=\"struct unionfind::extra::ByRank\">ByRank</a>&lt;R, T&gt;: <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_by_rank_or_add\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#178-192\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.union_by_rank_or_add\" class=\"fn\">union_by_rank_or_add</a>(\n    &amp;mut self,\n    elem1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n    elem2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"unionfind/generic/enum.UnionStatus.html\" title=\"enum unionfind::generic::UnionStatus\">UnionStatus</a>, <a class=\"enum\" href=\"unionfind/generic/enum.AddError.html\" title=\"enum unionfind::generic::AddError\">AddError</a>&lt;&lt;<a class=\"struct\" href=\"unionfind/extra/struct.ByRank.html\" title=\"struct unionfind::extra::ByRank\">ByRank</a>&lt;R, T&gt; as <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/extra/trait.GrowableExtra.html#associatedtype.AddError\" title=\"type unionfind::extra::GrowableExtra::AddError\">AddError</a>, &lt;M as <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableMapping.html\" title=\"trait unionfind::mapping::GrowableMapping\">GrowableMapping</a>&lt;T, T&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/mapping/trait.GrowableMapping.html#associatedtype.AddError\" title=\"type unionfind::mapping::GrowableMapping::AddError\">AddError</a>&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Union two elements in the union find by rank. Try to add the elements if they were not already in.</p>\n</div></details></div></details>",0,"unionfind::VecUnionFindByRank","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFind%3CT,+V,+M,+ByRank%3CR,+T%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#269-323\">Source</a><a href=\"#impl-UnionFind%3CT,+V,+M,+ByRank%3CR,+T%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, M, R&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, <a class=\"struct\" href=\"unionfind/extra/struct.ByRank.html\" title=\"struct unionfind::extra::ByRank\">ByRank</a>&lt;R, T&gt;&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"unionfind/mapping/trait.Mapping.html\" title=\"trait unionfind::mapping::Mapping\">Mapping</a>&lt;T, T&gt;,\n    R: <a class=\"trait\" href=\"unionfind/mapping/trait.RankMapping.html\" title=\"trait unionfind::mapping::RankMapping\">RankMapping</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_by_rank\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#276-285\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.union_by_rank\" class=\"fn\">union_by_rank</a>(\n    &amp;mut self,\n    elem1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n    elem2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"unionfind/generic/enum.UnionStatus.html\" title=\"enum unionfind::generic::UnionStatus\">UnionStatus</a>, <a class=\"enum\" href=\"unionfind/generic/enum.UnionByRankError.html\" title=\"enum unionfind::generic::UnionByRankError\">UnionByRankError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>union two elements in the union find by rank</p>\n</div></details></div></details>",0,"unionfind::VecUnionFindByRank","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#106-168\">Source</a><a href=\"#impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, V, M, E&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableIdentityMapping.html\" title=\"trait unionfind::mapping::GrowableIdentityMapping\">GrowableIdentityMapping</a>&lt;T&gt;,\n    E: <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_or_add\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#117-128\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.find_or_add\" class=\"fn\">find_or_add</a>(\n    &amp;mut self,\n    elem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"enum\" href=\"unionfind/generic/enum.AddError.html\" title=\"enum unionfind::generic::AddError\">AddError</a>&lt;&lt;E as <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/extra/trait.GrowableExtra.html#associatedtype.AddError\" title=\"type unionfind::extra::GrowableExtra::AddError\">AddError</a>, &lt;M as <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableMapping.html\" title=\"trait unionfind::mapping::GrowableMapping\">GrowableMapping</a>&lt;T, T&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/mapping/trait.GrowableMapping.html#associatedtype.AddError\" title=\"type unionfind::mapping::GrowableMapping::AddError\">AddError</a>&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Find an element in the union find. Performs no path shortening,\nbut can be used through an immutable reference.\nIf the element was not present in the unionfind previously, add it.</p>\n<p>Use <a href=\"unionfind/generic/struct.UnionFind.html#method.find_shorten_or_add\" title=\"method unionfind::generic::UnionFind::find_shorten_or_add\"><code>find_shorten</code></a> for a more efficient find.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_shorten_or_add\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#135-146\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.find_shorten_or_add\" class=\"fn\">find_shorten_or_add</a>(\n    &amp;mut self,\n    elem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"enum\" href=\"unionfind/generic/enum.AddError.html\" title=\"enum unionfind::generic::AddError\">AddError</a>&lt;&lt;E as <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/extra/trait.GrowableExtra.html#associatedtype.AddError\" title=\"type unionfind::extra::GrowableExtra::AddError\">AddError</a>, &lt;M as <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableMapping.html\" title=\"trait unionfind::mapping::GrowableMapping\">GrowableMapping</a>&lt;T, T&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/mapping/trait.GrowableMapping.html#associatedtype.AddError\" title=\"type unionfind::mapping::GrowableMapping::AddError\">AddError</a>&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Find an element in the union find. Performs path shortening,\nwhich means you need mutable access to the union find.\nIf the element was not present in the unionfind previously, add it.</p>\n<p>Use <a href=\"unionfind/generic/struct.UnionFind.html#method.find\" title=\"method unionfind::generic::UnionFind::find\"><code>find</code></a> for an immutable version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_by_or_add\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#149-167\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.union_by_or_add\" class=\"fn\">union_by_or_add</a>&lt;U: <a class=\"trait\" href=\"unionfind/union/trait.Union.html\" title=\"trait unionfind::union::Union\">Union</a>&lt;T&gt;&gt;(\n    &amp;mut self,\n    elem1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n    elem2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n    union: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"unionfind/generic/enum.UnionStatus.html\" title=\"enum unionfind::generic::UnionStatus\">UnionStatus</a>, <a class=\"enum\" href=\"unionfind/generic/enum.UnionOrAddError.html\" title=\"enum unionfind::generic::UnionOrAddError\">UnionOrAddError</a>&lt;U::<a class=\"associatedtype\" href=\"unionfind/union/trait.Union.html#associatedtype.Err\" title=\"type unionfind::union::Union::Err\">Err</a>, T, V, M, E&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Union two elements in the union find. Try to add the elements if they were not already in.</p>\n</div></details></div></details>",0,"unionfind::VecUnionFind","unionfind::VecUnionFindByRank","unionfind::HashUnionFind","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFind","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#217-258\">Source</a><a href=\"#impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, V, M, E&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"unionfind/mapping/trait.Mapping.html\" title=\"trait unionfind::mapping::Mapping\">Mapping</a>&lt;T, T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_by\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#243-257\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.union_by\" class=\"fn\">union_by</a>&lt;U: <a class=\"trait\" href=\"unionfind/union/trait.Union.html\" title=\"trait unionfind::union::Union\">Union</a>&lt;T&gt;&gt;(\n    &amp;mut self,\n    elem1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n    elem2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>,\n    union: U,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"unionfind/generic/enum.UnionStatus.html\" title=\"enum unionfind::generic::UnionStatus\">UnionStatus</a>, <a class=\"enum\" href=\"unionfind/generic/enum.UnionError.html\" title=\"enum unionfind::generic::UnionError\">UnionError</a>&lt;U::<a class=\"associatedtype\" href=\"unionfind/union/trait.Union.html#associatedtype.Err\" title=\"type unionfind::union::Union::Err\">Err</a>&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>union two elements in the union find</p>\n</div></details></div></details>",0,"unionfind::VecUnionFind","unionfind::VecUnionFindByRank","unionfind::HashUnionFind","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFind","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#337-352\">Source</a><a href=\"#impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, V, M, E&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableIdentityMapping.html\" title=\"trait unionfind::mapping::GrowableIdentityMapping\">GrowableIdentityMapping</a>&lt;T&gt;,\n    E: <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.add\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#343-351\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.add\" class=\"fn\">add</a>(\n    &amp;mut self,\n    elem: T,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"unionfind/generic/enum.AddError.html\" title=\"enum unionfind::generic::AddError\">AddError</a>&lt;&lt;E as <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/extra/trait.GrowableExtra.html#associatedtype.AddError\" title=\"type unionfind::extra::GrowableExtra::AddError\">AddError</a>, &lt;M as <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableMapping.html\" title=\"trait unionfind::mapping::GrowableMapping\">GrowableMapping</a>&lt;T, T&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/mapping/trait.GrowableMapping.html#associatedtype.AddError\" title=\"type unionfind::mapping::GrowableMapping::AddError\">AddError</a>&gt;&gt;</h4></section></div></details>",0,"unionfind::VecUnionFind","unionfind::VecUnionFindByRank","unionfind::HashUnionFind","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFind","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#354-366\">Source</a><a href=\"#impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, V, M, E&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableIdentityMapping.html\" title=\"trait unionfind::mapping::GrowableIdentityMapping\">GrowableIdentityMapping</a>&lt;T&gt;,\n    E: <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.add_with_extra\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#359-365\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.add_with_extra\" class=\"fn\">add_with_extra</a>(\n    &amp;mut self,\n    elem: T,\n    extra: V,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"unionfind/generic/enum.AddError.html\" title=\"enum unionfind::generic::AddError\">AddError</a>&lt;&lt;E as <a class=\"trait\" href=\"unionfind/extra/trait.GrowableExtra.html\" title=\"trait unionfind::extra::GrowableExtra\">GrowableExtra</a>&lt;T, V&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/extra/trait.GrowableExtra.html#associatedtype.AddError\" title=\"type unionfind::extra::GrowableExtra::AddError\">AddError</a>, &lt;M as <a class=\"trait\" href=\"unionfind/mapping/trait.GrowableMapping.html\" title=\"trait unionfind::mapping::GrowableMapping\">GrowableMapping</a>&lt;T, T&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/mapping/trait.GrowableMapping.html#associatedtype.AddError\" title=\"type unionfind::mapping::GrowableMapping::AddError\">AddError</a>&gt;&gt;</h4></section></div></details>",0,"unionfind::VecUnionFind","unionfind::VecUnionFindByRank","unionfind::HashUnionFind","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFind","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#39-57\">Source</a><a href=\"#impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, V, M, E&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"unionfind/mapping/trait.ParentMapping.html\" title=\"trait unionfind::mapping::ParentMapping\">ParentMapping</a>&lt;T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: <a class=\"trait\" href=\"unionfind/extra/trait.Extra.html\" title=\"trait unionfind::extra::Extra\">Extra</a>&lt;T, V&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#46-56\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.new\" class=\"fn\">new</a>(\n    elems: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"unionfind/generic/enum.NewUnionFindError.html\" title=\"enum unionfind::generic::NewUnionFindError\">NewUnionFindError</a>&lt;&lt;M as <a class=\"trait\" href=\"unionfind/mapping/trait.ParentMapping.html\" title=\"trait unionfind::mapping::ParentMapping\">ParentMapping</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/mapping/trait.ParentMapping.html#associatedtype.Err\" title=\"type unionfind::mapping::ParentMapping::Err\">Err</a>, &lt;E as <a class=\"trait\" href=\"unionfind/extra/trait.Extra.html\" title=\"trait unionfind::extra::Extra\">Extra</a>&lt;T, V&gt;&gt;::<a class=\"associatedtype\" href=\"unionfind/extra/trait.Extra.html#associatedtype.DefaultMappingErr\" title=\"type unionfind::extra::Extra::DefaultMappingErr\">DefaultMappingErr</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new union find, allowing you to specify all type parameters.</p>\n</div></details></div></details>",0,"unionfind::VecUnionFind","unionfind::VecUnionFindByRank","unionfind::HashUnionFind","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFind","unionfind::BTreeUnionFindByRank"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#59-95\">Source</a><a href=\"#impl-UnionFind%3CT,+V,+M,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, V, M: <a class=\"trait\" href=\"unionfind/mapping/trait.Mapping.html\" title=\"trait unionfind::mapping::Mapping\">Mapping</a>&lt;T, T&gt;, E&gt; <a class=\"struct\" href=\"unionfind/generic/struct.UnionFind.html\" title=\"struct unionfind::generic::UnionFind\">UnionFind</a>&lt;T, V, M, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#64-75\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.find\" class=\"fn\">find</a>(&amp;self, elem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Find an element in the union find. Performs no path shortening,\nbut can be used through an immutable reference.</p>\n<p>Use <a href=\"unionfind/generic/struct.UnionFind.html#method.find_shorten\" title=\"method unionfind::generic::UnionFind::find_shorten\"><code>find_shorten</code></a> for a more efficient find.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_shorten\" class=\"method\"><a class=\"src rightside\" href=\"src/unionfind/generic.rs.html#81-94\">Source</a><h4 class=\"code-header\">pub fn <a href=\"unionfind/generic/struct.UnionFind.html#tymethod.find_shorten\" class=\"fn\">find_shorten</a>(&amp;mut self, elem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Find an element in the union find. Performs path shortening,\nwhich means you need mutable access to the union find.</p>\n<p>Use <a href=\"unionfind/generic/struct.UnionFind.html#method.find\" title=\"method unionfind::generic::UnionFind::find\"><code>find</code></a> for an immutable version.</p>\n</div></details></div></details>",0,"unionfind::VecUnionFind","unionfind::VecUnionFindByRank","unionfind::HashUnionFind","unionfind::HashUnionFindByRank","unionfind::BTreeUnionFind","unionfind::BTreeUnionFindByRank"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[33402]}