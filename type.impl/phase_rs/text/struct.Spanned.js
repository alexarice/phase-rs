(function() {
    var type_impls = Object.fromEntries([["phase_rs",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Spanned%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#22\">Source</a><a href=\"#impl-Clone-for-Spanned%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"phase_rs/text/struct.Spanned.html\" title=\"struct phase_rs::text::Spanned\">Spanned</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#22\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"phase_rs/text/struct.Spanned.html\" title=\"struct phase_rs::text::Spanned\">Spanned</a>&lt;S, T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","phase_rs::combinator::raw_syntax::term::TermR","phase_rs::combinator::raw_syntax::term::TensorR","phase_rs::combinator::raw_syntax::term::AtomR","phase_rs::combinator::raw_syntax::pattern::PatternR","phase_rs::combinator::raw_syntax::pattern::PatTensorR","phase_rs::combinator::raw_syntax::pattern::PatAtomR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Spanned%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#22\">Source</a><a href=\"#impl-Debug-for-Spanned%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"phase_rs/text/struct.Spanned.html\" title=\"struct phase_rs::text::Spanned\">Spanned</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#22\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","phase_rs::combinator::raw_syntax::term::TermR","phase_rs::combinator::raw_syntax::term::TensorR","phase_rs::combinator::raw_syntax::term::AtomR","phase_rs::combinator::raw_syntax::pattern::PatternR","phase_rs::combinator::raw_syntax::pattern::PatTensorR","phase_rs::combinator::raw_syntax::pattern::PatAtomR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Spanned%3C(),+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#45-52\">Source</a><a href=\"#impl-From%3CT%3E-for-Spanned%3C(),+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"phase_rs/text/struct.Spanned.html\" title=\"struct phase_rs::text::Spanned\">Spanned</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#46-51\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: T) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<T>","phase_rs::combinator::raw_syntax::term::TermR","phase_rs::combinator::raw_syntax::term::TensorR","phase_rs::combinator::raw_syntax::term::AtomR","phase_rs::combinator::raw_syntax::pattern::PatternR","phase_rs::combinator::raw_syntax::pattern::PatTensorR","phase_rs::combinator::raw_syntax::pattern::PatAtomR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Spanned%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#22\">Source</a><a href=\"#impl-PartialEq-for-Spanned%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"phase_rs/text/struct.Spanned.html\" title=\"struct phase_rs::text::Spanned\">Spanned</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#22\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"phase_rs/text/struct.Spanned.html\" title=\"struct phase_rs::text::Spanned\">Spanned</a>&lt;S, T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","phase_rs::combinator::raw_syntax::term::TermR","phase_rs::combinator::raw_syntax::term::TensorR","phase_rs::combinator::raw_syntax::term::AtomR","phase_rs::combinator::raw_syntax::pattern::PatternR","phase_rs::combinator::raw_syntax::pattern::PatTensorR","phase_rs::combinator::raw_syntax::pattern::PatAtomR"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToDoc-for-Spanned%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#39-43\">Source</a><a href=\"#impl-ToDoc-for-Spanned%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T: <a class=\"trait\" href=\"phase_rs/text/trait.ToDoc.html\" title=\"trait phase_rs::text::ToDoc\">ToDoc</a>&gt; <a class=\"trait\" href=\"phase_rs/text/trait.ToDoc.html\" title=\"trait phase_rs::text::ToDoc\">ToDoc</a> for <a class=\"struct\" href=\"phase_rs/text/struct.Spanned.html\" title=\"struct phase_rs::text::Spanned\">Spanned</a>&lt;S, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_doc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#40-42\">Source</a><a href=\"#method.to_doc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phase_rs/text/trait.ToDoc.html#tymethod.to_doc\" class=\"fn\">to_doc</a>(&amp;self) -&gt; <a class=\"struct\" href=\"pretty/struct.RcDoc.html\" title=\"struct pretty::RcDoc\">RcDoc</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Produce an <code>RcDoc</code> for pretty-printing.</div></details></div></details>","ToDoc","phase_rs::combinator::raw_syntax::term::TermR","phase_rs::combinator::raw_syntax::term::TensorR","phase_rs::combinator::raw_syntax::term::AtomR","phase_rs::combinator::raw_syntax::pattern::PatternR","phase_rs::combinator::raw_syntax::pattern::PatTensorR","phase_rs::combinator::raw_syntax::pattern::PatAtomR"],["<section id=\"impl-StructuralPartialEq-for-Spanned%3CS,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/phase_rs/text.rs.html#22\">Source</a><a href=\"#impl-StructuralPartialEq-for-Spanned%3CS,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"phase_rs/text/struct.Spanned.html\" title=\"struct phase_rs::text::Spanned\">Spanned</a>&lt;S, T&gt;</h3></section>","StructuralPartialEq","phase_rs::combinator::raw_syntax::term::TermR","phase_rs::combinator::raw_syntax::term::TensorR","phase_rs::combinator::raw_syntax::term::AtomR","phase_rs::combinator::raw_syntax::pattern::PatternR","phase_rs::combinator::raw_syntax::pattern::PatTensorR","phase_rs::combinator::raw_syntax::pattern::PatAtomR"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11992]}